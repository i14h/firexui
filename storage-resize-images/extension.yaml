# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: storage-resize-images-admin-ui
version: 0.1.0
specVersion: v1beta

displayName: Resize Images ++
description:
  Resizes images uploaded to Cloud Storage to a specified size, and optionally keeps or deletes the original image. Also configurable via admin ui

license: Apache-2.0

sourceUrl: https://github.com/TODO
releaseNotesUrl: https://github.com/TODO/CHANGELOG.md

author:
  authorName: TODO
  url: https://TODO

contributors:
  - authorName: Rafi Khan
    email: khanrafi@google.com
    url: https://github.com/khanrafi
  - authorName: Ehsan Nasiri
    email: ehsannasiri@google.com
    url: https://github.com/ehsannas
  - authorName: Iman Rahmati
    email: imanrahmati@google.com
    url: https://github.com/i14h

apis:
  - apiName: storage-component.googleapis.com
    reason: Needed to use Cloud Storage

roles:
  - role: storage.admin
    reason: Allows the extension to store resized images in Cloud Storage

resources:
  - name: generateResizedImage
    type: firebaseextensions.v1beta.function
    description: >-
      Listens for new images uploaded to your specified Cloud Storage bucket, resizes the images,
      then stores the resized images in the same bucket. Optionally keeps or deletes the original images.
    properties:
      location: ${param:LOCATION}
      runtime: nodejs10
      availableMemoryMb: 1024
      eventTrigger:
        eventType: google.storage.object.finalize
        resource: projects/_/buckets/${param:IMG_BUCKET}
  - name: adminui
    type: firebaseextensions.v1beta.function
    description:
      Serves an Admin UI
    properties:
      location: ${param:LOCATION}
      httpsTrigger: {}


params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      You usually want a location close to your Storage bucket. For help selecting a
      location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    default: us-central1
    required: true
    immutable: true
  - param: FIREBASE_API_KEY
    label: Firebase API key
    description: >-
      API key  to initialize Auth
    type: string
    required: true
  - param: ADMIN_EMAIL
    label: Default admin email
    description: >-
      The email address for the admin user
    type: string
    example: foobar@example.com
    validationRegex: .{1,}@[^.]{1,}
    validationErrorMessage: Must be a valid email address
    required: true

  - param: IMG_BUCKET
    label: Cloud Storage bucket for images
    description: >
      To which Cloud Storage bucket will you upload images that you want to resize?
      Resized images will be stored in this bucket. Depending on your extension configuration,
      original images are either kept or deleted.
    type: string
    example: my-project-12345.appspot.com
    validationRegex: ^([0-9a-z_.-]*)$
    validationErrorMessage: Invalid storage bucket
    default: ${STORAGE_BUCKET}
    required: true
